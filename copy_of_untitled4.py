# -*- coding: utf-8 -*-
"""Copy of Untitled4.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1qT9nKyrs01ANgaGPc41X-z2mxBiQ-9Ur
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
from scipy import stats

data=pd.read_csv("/content/archive (2).zip")
print(data.head())
print(data.info())
print(data.describe())

missing_values = data.isnull().sum()
print("Missing values:\n", missing_values)

# Handle missing values (e.g., fill with mean/median or drop)
data = data.dropna()  # Drop rows with missing values (you can also choose to fill missing values)

# Check for duplicates
duplicates = data.duplicated().sum()
print("Duplicates:", duplicates)

# Remove duplicates
data = data.drop_duplicates()
numeric_data = data.select_dtypes(include=np.number)
# Descriptive Statistics
mean_values = numeric_data.mean()
median_values = numeric_data.median()
mode_values = numeric_data.mode().iloc[0]
std_dev_values = numeric_data.std()

print("Mean:\n", mean_values)
print("Median:\n", median_values)
print("Mode:\n", mode_values)
print("Standard Deviation:\n", std_dev_values)

data['Date'] = pd.to_datetime(data['Date'])
data.set_index('Date', inplace=True)
monthly_sales = data['Total Amount'].resample('M').sum()

plt.figure(figsize=(12, 6))
plt.plot(monthly_sales, marker='o')
plt.title('Monthly Sales Trends')
plt.xlabel('Date')
plt.ylabel('Total Sales')
plt.show()

plt.figure(figsize=(6, 4))
sns.countplot(x='Gender', data=data)
plt.title('Gender Distribution')
plt.show()

# Age distribution
plt.figure(figsize=(6, 4))
sns.histplot(data['Age'], kde=True, bins=30)
plt.title('Age Distribution')
plt.show()

# Product Category distribution
plt.figure(figsize=(12, 6))
sns.countplot(x='Product Category', data=data, order=data['Product Category'].value_counts().index)
plt.title('Product Category Distribution')
plt.xticks(rotation=45)
plt.show()

# Correlation Heatmap
plt.figure(figsize=(10, 8))
correlation_matrix = data.select_dtypes(include=np.number).corr()
sns.heatmap(correlation_matrix, annot=True, cmap='coolwarm', vmin=-1, vmax=1)
plt.title('Correlation Heatmap')
plt.show()

# Recommendations based on EDA
# Example recommendations
print("Recommendations:")
print("1. Focus on the most popular product categories for marketing campaigns.")
print("2. Consider seasonal trends in sales for inventory management.")
print("3. Analyze customer demographics to tailor promotions and offers.")
print("4. Monitor monthly sales trends to identify potential growth periods or declines.")